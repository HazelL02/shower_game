-----------------------------------------------------------------------------------------
--
-- setting.lua
--
-----------------------------------------------------------------------------------------

local composer = require( "composer" )
local scene = composer.newScene()


function scene:create( event )
	local sceneGroup = self.view
	
    local background = display.newRoundedRect(display.contentWidth/2, display.contentHeight/2, display.contentWidth*0.7, display.contentHeight*0.7, 55)
    background.strokeWidth = 10
	background:setStrokeColor( 0.4, 0.2, 0.2 )
    background:setFillColor(0.6, 0.5, 0.5)

    local title = display.newText("닫기", display.contentWidth*0.75, display.contentHeight*0.25)
    title.size = 70

	local function drag( event )
		if( event.phase == "began" ) then
			display.getCurrentStage():setFocus( event.target )
			event.target.isFocus = true
		elseif( event.phase == "moved" ) then
			if ( event.target.isFocus ) then
				event.target.x = event.xStart + event.xDelta
				event.target.y = event.yStart + event.yDelta
			end
		elseif ( event.phase == "ended" or event.phase == "cancelled") then
			if ( event.target.isFocus ) then
				display.getCurrentStage():setFocus( nil )
				event.target.isFocus = false
			else
				display.getCurrentStage():setFocus( nil )
				event.target.isFocus = false
			end
		end
	end

    function title:tap( event )
		soap = composer.getVariable("soap")
		water = composer.getVariable("water")
		fan = composer.getVariable("fan")
		game_mode = composer.getVariable("game_mode")
		if (game_mode == 0) then
			soap:addEventListener("touch", drag)
			water:addEventListener("touch", drag)
			fan:addEventListener("touch", drag)
		elseif (game_mode == 1) then
			water:addEventListener("touch", drag)
			fan:addEventListener("touch", drag)
		elseif (game_mode == 2) then
			fan:addEventListener("touch", drag)
		end
        local timeAttack = composer.getVariable("timeAttack")
        timer.resume(timeAttack)
        composer.hideOverlay('setting')
    end
    title:addEventListener("tap", title)

    sceneGroup:insert(background)
    sceneGroup:insert(title)
end

function scene:show( event )
	local sceneGroup = self.view
	local phase = event.phase
	
	if phase == "will" then
		-- Called when the scene is still off screen and is about to move on screen
	elseif phase == "did" then
		-- Called when the scene is now on screen
		-- 
		-- INSERT code here to make the scene come alive
		-- e.g. start timers, begin animation, play audio, etc.

	end	
end

function scene:hide( event )
	local sceneGroup = self.view
	local phase = event.phase
	
	if event.phase == "will" then
		-- Called when the scene is on screen and is about to move off screen
		--
		-- INSERT code here to pause the scene
		-- e.g. stop timers, stop animation, unload sounds, etc.)
	elseif phase == "did" then
		-- Called when the scene is now off screen

	end
end

function scene:destroy( event )
	local sceneGroup = self.view
	
	-- Called prior to the removal of scene's "view" (sceneGroup)
	-- 
	-- INSERT code here to cleanup the scene
	-- e.g. remove display objects, remove touch listeners, save state, etc.
end

---------------------------------------------------------------------------------

-- Listener setup
scene:addEventListener( "create", scene )
scene:addEventListener( "show", scene )
scene:addEventListener( "hide", scene )
scene:addEventListener( "destroy", scene )

-----------------------------------------------------------------------------------------

return scene
